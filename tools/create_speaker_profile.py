import sounddevice as sd
import scipy.io.wavfile as wav
import tempfile
import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from voice_profile_manager import VoiceProfileManager

SAMPLE_RATE = 16000
DURATION = 6  # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

def record_audio(filename):
    print(f"üéôÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á... ({DURATION} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)")
    audio = sd.rec(int(DURATION * SAMPLE_RATE), samplerate=SAMPLE_RATE, channels=1, dtype="int16")
    sd.wait()
    wav.write(filename, SAMPLE_RATE, audio)
    print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: {filename}")

def main():
    name = input("üë§ ‡∏õ‡πâ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏û‡∏π‡∏î (‡πÄ‡∏ä‡πà‡∏ô arth, metta): ").strip().lower()
    if not name:
        print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô")
        return

    with tempfile.NamedTemporaryFile(suffix=".wav", delete=False) as tmpfile:
        tmp_path = tmpfile.name
        input("üî¥ ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á...")
        record_audio(tmp_path)

        vpm = VoiceProfileManager()
        vpm.train_profile(name, tmp_path)

if __name__ == "__main__":
    main()