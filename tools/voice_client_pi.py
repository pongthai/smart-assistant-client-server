import sounddevice as sd
import scipy.io.wavfile as wav
import requests
import tempfile
import os

SAMPLE_RATE = 16000
DURATION = 5  # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
SERVER_URL = "http://<MAC-IP>:8000"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô <MAC-IP> ‡πÄ‡∏õ‡πá‡∏ô IP ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á Mac Mini

def record_audio(path):
    print(f"üéôÔ∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á {DURATION} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...")
    audio = sd.rec(int(DURATION * SAMPLE_RATE), samplerate=SAMPLE_RATE, channels=1, dtype='int16')
    sd.wait()
    wav.write(path, SAMPLE_RATE, audio)
    print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à: {path}")

def create_profile(name):
    with tempfile.NamedTemporaryFile(suffix='.wav', delete=False) as tmp:
        record_audio(tmp.name)
        with open(tmp.name, 'rb') as f:
            files = {'audio': f}
            data = {'name': name}
            res = requests.post(f"{SERVER_URL}/create-profile", files=files, data=data)
        print("üì¶ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:", res.json())
    os.remove(tmp.name)

def identify_speaker():
    with tempfile.NamedTemporaryFile(suffix='.wav', delete=False) as tmp:
        record_audio(tmp.name)
        with open(tmp.name, 'rb') as f:
            files = {'audio': f}
            res = requests.post(f"{SERVER_URL}/upload-audio", files=files)
        print("üß† ‡∏ú‡∏π‡πâ‡∏û‡∏π‡∏î‡∏Ñ‡∏∑‡∏≠:", res.json())
    os.remove(tmp.name)

if __name__ == "__main__":
    while True:
        mode = input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î [1] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå  [2] ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡∏û‡∏π‡∏î  [q] ‡∏≠‡∏≠‡∏Å: ").strip()
        if mode == "1":
            name = input("‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ").strip()
            create_profile(name)
        elif mode == "2":
            identify_speaker()
        elif mode == "q":
            break